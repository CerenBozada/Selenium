# Generated by Selenium IDE
import time
from pymongo import MongoClient
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

client = MongoClient('localhost', 27017)
client = MongoClient("mongodb://localhost:27017/")
db = client.scrap
cars = db.cars


class TestSahibinden():
    def __init__(self):
        self.driver = webdriver.Chrome(
            "C:\Program Files (x86)\chromedriver.exe")
        self.driver.fullscreen_window()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def run(self):
        self.driver.get("https://www.sahibinden.com")

        self.driver.find_element(By.ID, "searchText").click()
        self.driver.find_element(By.ID, "searchText").send_keys("araba")
        self.driver.find_element(By.ID, "searchText").send_keys(Keys.ENTER)
        time.sleep(5)

        ceren = self.driver.find_elements(
            By.CLASS_NAME, "searchResultsItem     ")
        for i in ceren:
            try:
                title = i.find_element(
                    By.CLASS_NAME, "searchResultsTitleValue ").text
                price = i.find_element(
                    By.CLASS_NAME, "searchResultsPriceValue").text

                location = i.find_element(
                    By.CLASS_NAME, "searchResultsLocationValue").text
                print(title, price, location)
                cars.insert_one(
                    {"title": title, "price": price, "location": location})
                print("\n")
            except:
                pass
        self.driver.find_element(By.LINK_TEXT, "2")


sahibinden = TestSahibinden()
sahibinden.run()
# @pytest.fixture
# def driver(request):
#   if request.config.getoption("--browser") == "chrome":
#     webdriver = webdriver.Chrome()
#   elif request.config.getoption("--browser") == "firefox":
#     webdriver = webdriver.Firefox()
